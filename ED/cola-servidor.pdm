Coupled
    {
    Type = Root
    Name = cola-servidor
    Ports = 0; 0
    Description = 
    Graphic
        {
        Position = 0; 0
        Dimension = 600; 600
        Direction = Right
        Color = 15
        Icon = 
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Atomic
            {
            Name = Cola
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = -3135 ; -885
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 4 ; Initial tokens at place  (Scilab expression)
                time = Str; 0 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Transition0
            Ports = 2 ; 1
            Path = petri/transition.h
            Description = Transition of a Petri Net
            Graphic
                {
                Position = 435 ; -1035
                Dimension = 180 ; 720
                Direction = Right
                Color = 1
                Icon = None
                }
            Parameters
                {
                time = Str; 0 ; Firing time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Libre
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = -3135 ; -3060
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 1 ; Initial tokens at place  (Scilab expression)
                time = Str; 0 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Event Triggered Transition0
            Ports = 1 ; 1
            Path = petri\event_triggered_transition.h
            Description = Event Triggered transition of a Petri Net
            Graphic
                {
                Position = -5565 ; -1935
                Dimension = 180 ; 720
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                }
            }
        Atomic
            {
            Name = Servidor
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = 1665 ; -510
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 0 ; Initial tokens at place  (Scilab expression)
                time = Str; 2 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Transition1
            Ports = 1 ; 1
            Path = petri/transition.h
            Description = Transition of a Petri Net
            Graphic
                {
                Position = 4110 ; -510
                Dimension = 180 ; 720
                Direction = Right
                Color = 1
                Icon = None
                }
            Parameters
                {
                time = Str; 0 ; Firing time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = GnuPlot0
            Ports = 1 ; 0
            Path = sinks/gnuplot.h
            Description = Plot input signal using GnuPlot
            Graphic
                {
                Position = -180 ; 2115
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %sinks%gnuplot.svg
                }
            Parameters
                {
                Inputs = Str; %Inputs ; Number of inputs
                Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                Format1 = Str; with steps title 'First output' ; Formatting options for input 1
                Format2 = Str;  ; Formatting options for input 2
                Format3 = Str;  ; Formatting options for input 3
                Format4 = Str;  ; Formatting options for input 4
                Format5 = Str;  ; Formatting options for input 5
                }
            }
        Atomic
            {
            Name = From Workspace0
            Ports = 0 ; 1
            Path = sources/fromworkspace.h
            Description = Reads an input signal from Scilab Workspace
            Graphic
                {
                Position = -8205 ; -1455
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sources%workspace.bmp
                }
            Parameters
                {
                Time variable = Str; t ; 
                Signal = Str; u ; 
                Method = Lst; 1%QSS%QSS2/3% ; 
                }
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  1 ;  1 ; -1
            PointX = -5250 ; -3825 ; -3825 ; -3315
            PointY = -1575 ; -1575 ; -525 ; -525
            }
        Line
            {
            Source = Cmp ;  6 ;  1 ; 0
            Sink = Cmp ;  3 ;  1 ; -1
            PointX = 4425 ; 4425 ; -3315 ; -3315
            PointY = -150 ; -4500 ; -4500 ; -2700
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Cmp ;  2 ;  1 ; -1
            PointX = -2250 ; -150 ; -150 ; 285
            PointY = -2700 ; -2700 ; -825 ; -825
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Cmp ;  5 ;  1 ; -1
            PointX = 750 ; 1485 ; 1485
            PointY = -675 ; -675 ; -150
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Cmp ;  6 ;  1 ; -1
            PointX = 2550 ; 2550 ; 3960
            PointY = -150 ; -150 ; -150
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ;  2 ;  2 ; -1
            PointX = -2250 ; -2250 ; 285
            PointY = -525 ; -525 ; -525
            }
        Line
            {
            Source = Cmp ;  7 ;  1 ; -1
            Sink = Cmp ;  1 ;  1 ; 0
            PointX = -315 ; -2250 ; -2250
            PointY = 2475 ; 2475 ; -525
            }
        Line
            {
            Source = Cmp ;  8 ;  1 ; 0
            Sink = Cmp ;  4 ;  1 ; -1
            PointX = -7425 ; -5715 ; -5715
            PointY = -1125 ; -1125 ; -1575
            }
        }
    }
